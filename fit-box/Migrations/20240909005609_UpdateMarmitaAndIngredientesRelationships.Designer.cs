// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fit_box.Data;

#nullable disable

namespace fit_box.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240909005609_UpdateMarmitaAndIngredientesRelationships")]
    partial class UpdateMarmitaAndIngredientesRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IngredientesMarmita", b =>
                {
                    b.Property<Guid>("IngredientesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarmitasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IngredientesId", "MarmitasId");

                    b.HasIndex("MarmitasId");

                    b.ToTable("MarmitaIngredientes", (string)null);
                });

            modelBuilder.Entity("fit_box.Models.Ingredientes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LoginId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeEmGramas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.ToTable("Ingredientes", (string)null);
                });

            modelBuilder.Entity("fit_box.Models.Login", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Logins", (string)null);
                });

            modelBuilder.Entity("fit_box.Models.Marmita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LoginId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameMarmita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TamanhoMarmita")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.ToTable("Marmitas", (string)null);
                });

            modelBuilder.Entity("IngredientesMarmita", b =>
                {
                    b.HasOne("fit_box.Models.Ingredientes", null)
                        .WithMany()
                        .HasForeignKey("IngredientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fit_box.Models.Marmita", null)
                        .WithMany()
                        .HasForeignKey("MarmitasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fit_box.Models.Ingredientes", b =>
                {
                    b.HasOne("fit_box.Models.Login", null)
                        .WithMany("Ingredientes")
                        .HasForeignKey("LoginId");
                });

            modelBuilder.Entity("fit_box.Models.Marmita", b =>
                {
                    b.HasOne("fit_box.Models.Login", "Login")
                        .WithMany("Marmitas")
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("fit_box.Models.Login", b =>
                {
                    b.Navigation("Ingredientes");

                    b.Navigation("Marmitas");
                });
#pragma warning restore 612, 618
        }
    }
}
